import React, {Component} from 'react';
import Header from "../components/Header";
import Navigation from "../components/Navigation";
import ExploitSite from "../components/ExploitSite";
import ExploitApp from "../components/ExploitApp";
import axios from "../Utils/axios";
import TopPage from '../components/top';
import { IndexPageStyle, IndexPageContent } from './style/style';
// import '../Utils/flexible';
var pjson = require('../../package.json')
var pjsonUrl = pjson.config.url


class Discoverypage extends Component {
    constructor(props) {
        super(props);
        this.state={
            sitecenter:{
                longitude: '',
                latitude: '',
            },
            siteaddress:'',
            appcenter:{
                longitude: '',
                latitude: '',
            },
            appaddress:'',
            img_number:1,
            siteIp:"",
            location:"",
            registrar:"",
            registerTime:"",
            redirect:"",
            type:"",
            peopleNum:0,
            screenshotsite:'',
            certificate:{
            },
            relatedSites:[],
            relatedApp:"",
            appDomain:"",
            appIp:"",
            appLocation:"",
            family:"",
            platform:"",
            version:"",
            produceTime:"",
            paymentChannel:'',
            accounts:'',
            signature:{},
            screenshotapp:'',
            relatedSite:"",

            initSites:[]
        }
    }
    handleImgOnclick(number){
        this.setState({
            img_number:number
        })
    }
//site
    savesiteIp=(siteIp )=>{
        this.setState({
            siteIp :siteIp
        })
    }
    savelocation=(location)=>{
        this.setState({
            location:location
        })
    }
    saveregistrar=(registrar)=>{
        this.setState({
            registrar:registrar
        })
    }
    saveregisterTime=(registerTime)=>{
        this.setState({
            registerTime:registerTime
        })
    }
    saveredirect=(redirect)=>{
        this.setState({
            redirect:redirect
        })
    }
    savetype=(type)=>{
        this.setState({
            type:type
        })
    }
    savepeopleNum=(peopleNum)=>{
        this.setState({
            peopleNum:peopleNum
        })
    }
    savecertificate=(certificate)=>{
        this.setState({
            certificate:certificate
        })
    }
    saverelatedSites=(relatedSites)=>{
        this.setState({
            relatedSites:relatedSites
        })
    }
    saveInitSites=(initSites)=>{
        this.setState({
            initSites:initSites
        })
    }
    saverelatedApp=(relatedApp)=>{
        this.setState({
            relatedApp:relatedApp
        })
    }    
    savescreenshotSite=(screenshotsite)=>{
        this.setState({
            screenshotsite:screenshotsite
        })
    }
    savesiteCenter=(lat,long)=>{
        let pos = this.state.sitecenter;
        pos.latitude = lat;
        pos.longitude = long;
        this.setState({
            sitecenter:pos
        })
    }
    savesiteAddress=(address)=>{
        this.setState({
            siteaddress:address
        })
    }
    searchExploitSite = ()=>{
        axios.get(pjsonUrl+'/exploit/findSitesByDomain?url=toucai11i.com').then(
            response => {
                this.savesiteIp(response.data.ip)
                this.savelocation(response.data.location)
                this.saveregistrar(response.data.registrar)
                this.saveregisterTime(response.data.registerTime)
                this.saveredirect(response.data.redirect)
                this.savetype(response.data.type)
                this.savepeopleNum(response.data.peopleNum)
                this.savecertificate(response.data.certificate)
                this.saverelatedSites(response.data.relatedSites)
                this.saverelatedApp(response.data.relatedApp)
                this.savescreenshotSite(response.data.screenshot)
                this.savesiteCenter(response.data.lat,response.data.long)
                this.savesiteAddress(response.data.address)
                
            },
        )
    }
//app
    saveappDomain=(appDomain)=>{
        this.setState({
            appDomain:appDomain
        })
    }
    saveappIp=(appIp)=>{
        this.setState({
            appIp:appIp
        })
    }
    savescreenshotApp=(screenshotapp)=>{
        this.setState({
            screenshotapp:screenshotapp
        })
    }
    saveappLocation=(appLocation)=>{
        this.setState({
            appLocation:appLocation
        })
    }
    savefamily=(family)=>{
        this.setState({
            family:family
        })
    }
    saveplatform=(platform)=>{
        this.setState({
            platform:platform
        })
    }
    saveversion=(version)=>{
        this.setState({
            version:version
        })
    }
    saveproduceTime=(produceTime)=>{
        this.setState({
            produceTime:produceTime
        })
    }
    savepaymentChannel=(paymentChannel)=>{
        this.setState({
            paymentChannel:paymentChannel
        })
    }
    saveaccounts=(accounts)=>{
        this.setState({
            accounts:accounts
        })
    }
    savesignature=(signature)=>{
        this.setState({
            signature:signature
        })
    }
    saverelatedSite=(relatedSite)=>{
        this.setState({
            relatedSite:relatedSite
        })
    }
    saveappCenter=(lat,long)=>{
        let pos = this.state.appcenter;
        pos.latitude = lat;
        pos.longitude = long;
        this.setState({
            appcenter:pos
        })
    }
    saveappAddress=(address)=>{
        this.setState({
            appaddress:address
        })
    }
    searchExploitApp = ()=>{
        axios.get(pjsonUrl+'/exploit/findAppByPath').then(
            response => {
                // alert(response.data.domain);
                this.saveappDomain(response.data.domain)
                this.saveappIp(response.data.ip)
                this.saveappLocation(response.data.location)
                this.savefamily(response.data.family)
                this.saveplatform(response.data.platform)
                this.saveversion(response.data.version)
                this.saveproduceTime(response.data.produceTime)
                this.savepaymentChannel(response.data.paymentChannel)
                this.saveaccounts(response.data.accounts)
                this.savesignature(response.data.signature)
                this.saverelatedSite(response.data.relatedSites)
                this.savescreenshotApp(response.data.screenshot)
                this.saveappCenter(response.data.lat,response.data.long)
                this.saveappAddress(response.data.address)
            },
        )
    }
    getInitSites = () => {

        axios.get(pjsonUrl+'/initSites').then(
            
            response => {
                // alert(response.data.initSites);
                this.saveInitSites(response.data.initSites)
            },
        )
    }
    componentDidMount() {
        this.searchExploitSite()
        this.searchExploitApp()    
        this.getInitSites()
    }
    // ,
    render() {
        document.body.style.overflow = 'hidden'
        console.log(this.state.accounts)
        return (
            (this.state.peopleNum == 0 || this.state.accounts == '' || this.state.paymentChannel == '')
            ? <div style={{color:"white"}}><h2>loading...</h2></div>
            :
            <div id="wrapper">
                <IndexPageStyle>
                <TopPage  nav_number="p4"/>
                {/* <Header nav_number="p4"/> */}
                <div style={{display:this.state.img_number===1?"block":"none"}}>
                    <ExploitSite
                        img_number={this.state.img_number}
                        siteIp={this.state.siteIp}
                        location={this.state.location}
                        registrar={this.state.registrar}
                        registerTime={this.state.registerTime}
                        redirect={this.state.redirect}
                        type={this.state.type}
                        peopleNum={this.state.peopleNum}
                        certificate={this.state.certificate}
                        relatedSites={this.state.relatedSites}
                        relatedApp={this.state.relatedApp}
                        sitescreen={this.state.screenshotsite}
                        siteaddress={this.state.siteaddress}
                        sitecenter={this.state.sitecenter}
                        initSites = {this.state.initSites}
                        fatherChange={this.handleImgOnclick.bind(this)}
                    />
                </div>
                <div style={{display:this.state.img_number===2?"block":"none"}}>
                    <ExploitApp
                        img_number={this.state.img_number}
                        appDomain={this.state.appDomain}
                        appIp={this.state.appIp}
                        appLocation={this.state.appLocation}
                        family={this.state.family}
                        platform={this.state.platform}
                        version={this.state.version}
                        produceTime={this.state.produceTime}
                        paymentChannel={this.state.paymentChannel}
                        accounts={this.state.accounts}
                        signature={this.state.signature}
                        relatedSite={this.state.relatedSite}
                        appscreen={this.state.screenshotapp}
                        appaddress={this.state.appaddress}
                        appcenter={this.state.appcenter}
                        fatherChange={this.handleImgOnclick.bind(this)}
                    />
                </div>
                </IndexPageStyle>
            </div>
        );
    }
}

export default Discoverypage;
